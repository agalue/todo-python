---
services:

  mimir:
    image: grafana/mimir:latest
    hostname: mimir
    container_name: mimir
    command:
    - -config.file=/etc/mimir-config.yaml
    ports:
    - 9009:9009
    volumes:
    - ./config/mimir-config.yaml:/etc/mimir-config.yaml
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9009/ready || exit 1
      interval: 10s
      timeout: 1s
      retries: 10

  loki:
    image: grafana/loki:latest
    hostname: loki
    container_name: loki
    command:
    - -config.file=/etc/loki-config.yaml
    ports:
    - 3100:3100
    volumes:
    - ./config/loki-config.yaml:/etc/loki-config.yaml
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:3100/ready || exit 1
      interval: 10s
      timeout: 1s
      retries: 10

  tempo:
    image: grafana/tempo:latest
    hostname: tempo
    container_name: tempo
    command:
    - -config.file=/etc/tempo-config.yaml
    ports:
    - 3200:3200
    volumes:
    - ./config/tempo-config.yaml:/etc/tempo-config.yaml
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:3200/ready || exit 1
      interval: 10s
      timeout: 1s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    container_name: prometheus
    ports:
    - 9090:9090
    volumes:
    - ./config/prometheus-config.yaml:/etc/prometheus/prometheus.yaml
    command:
    - --config.file=/etc/prometheus/prometheus.yaml
    - --web.enable-remote-write-receiver
    - --enable-feature=exemplar-storage
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090/-/ready || exit 1
      interval: 10s
      timeout: 1s
      retries: 10

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    hostname: otelcol
    container_name: otelcol
    ports:
    - 4317:4317 # otlp grpc
    - 4318:4318 # otlp http
    depends_on:
      mimir:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
    volumes:
    - ./config/otelcol-config.yaml:/etc/otelcol-config.yaml
    command:
    - --config=/etc/otelcol-config.yaml
    environment:
      TZ: America/New_York

  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    container_name: grafana
    depends_on:
      mimir:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    ports:
    - 3000:3000
    volumes:
    - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/config.yaml
    environment:
      TZ: America/New_York
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/login || exit 1
      interval: 10s
      timeout: 1s
      retries: 10

  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    ports:
    - 5432:5432
    environment:
      TZ: America/New_York
      POSTGRES_HOST: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_DB: todo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 1s
      retries: 10

  api:
    build:
      context: ../api
    hostname: api
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
      otelcol:
        condition: service_started
    ports:
    - 8080:8080
    environment:
      TZ: America/New_York
      POSTGRES_HOST: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_DB: todo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      OTEL_SERVICE_NAME: api
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otelcol:4317
      OTEL_PYTHON_LOG_CORRELATION: "true"
      OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: "true"
      OTEL_PYTHON_FASTAPI_EXCLUDED_URLS: health

  ui:
    build:
      context: ../ui
    hostname: ui
    container_name: ui
    depends_on:
      api:
        condition: service_started
    ports:
    - 8081:8080
    environment:
      TZ: America/New_York
